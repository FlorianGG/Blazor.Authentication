@page "/ingredient"
@using Dtos
@inject DemoBlazorServer.Core.Abstractions.IPizzeria Pizzeria

<PageTitle>Management des ingrédients</PageTitle>

<h1>Management des ingrédients</h1>

<div class="row">
    <div class="col-6">
        <EditForm Model="@CurrentIngredient" OnValidSubmit="@SubmitForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="Name" class="form-label">Nom</label>
                <InputText id="Name" @bind-Value="CurrentIngredient.Name" class="form-control" />
            </div>

            <div class="mb-3">
                <label for="Kcal" class="form-label">Kcal</label>
                <InputNumber id="Kcal" @bind-Value="CurrentIngredient.Kcal" step="10" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary">Valider</button>
        </EditForm>
    </div>
    <div class="col-6">
        @if (Ingredients == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <GenericTable Items="@Ingredients" Context="ingredient">
                <HeaderContent>
                    <tr>
                        <th>Nom</th>
                        <th>Kcal</th>
                        <th>Actions</th>
                    </tr>
                </HeaderContent>
                <RowContent>
                    <tr>
                        <td>@ingredient.Name</td>
                        <td>@ingredient.Kcal</td>
                        <td>
                            <div class="btn-group" role="group" aria-label="Basic example">
                                <button type="button"
                                        class="btn btn-danger"
                                        @onclick="@(() => DeleteIngredient(ingredient.Id))">
                                    <span class="oi oi-trash" aria-hidden="true"></span>
                                </button>
                                <button type="button"
                                        class="btn btn-warning"
                                        @onclick="@(() => EditIngredient(ingredient.Id))">
                                    <span class="oi oi-pencil" aria-hidden="true"></span>
                                </button>
                            </div>
                        </td>
                    </tr>
                </RowContent>
            </GenericTable>
        }
    </div>
</div>



@code {
    private IReadOnlyList<IngredientModel>? Ingredients { get; set; } = null;
    private IngredientModel CurrentIngredient { get; set; } = new();

    protected override void OnInitialized()
    {
        Ingredients = Pizzeria.GetIngredients();
    }

    private async Task SubmitForm()
    {
        if (Ingredients == null)
            return;

        if (CurrentIngredient.Id != Guid.Empty)
        {
            var IngredientToEdit = new IngredientModel() {
                Id = CurrentIngredient.Id,
                Name = CurrentIngredient.Name,
                Kcal = CurrentIngredient.Kcal
            };
            await Pizzeria.EditIngredient(IngredientToEdit);
        }
        else
        {
            var IngredientToEdit = new IngredientModel() {
                Id = Guid.NewGuid(),
                Name = CurrentIngredient.Name,
                Kcal = CurrentIngredient.Kcal };
            await Pizzeria.CreateIngredient(IngredientToEdit);
        }
        CurrentIngredient = new();
    }

    private async Task DeleteIngredient(Guid id)
    {
        await Pizzeria.DeleteIngredient(id);
    }

    private void EditIngredient(Guid id)
    {
        if (Ingredients != null)
        {
            var ingradientToEdit = Ingredients.First(pd => pd.Id == id);
            CurrentIngredient = new()
            {
                Id = ingradientToEdit.Id,
                Name = ingradientToEdit.Name,
                Kcal = ingradientToEdit.Kcal
            };
        }

    }

}
